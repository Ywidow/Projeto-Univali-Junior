// <auto-generated />
using System;
using Market.Api.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Market.Api.Migrations
{
    [DbContext(typeof(ItemContext))]
    partial class ItemContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Market.Api.Entities.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("Fabrication")
                        .HasColumnType("date");

                    b.Property<bool>("IsPerishable")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<int>("UnitOfMeasurement")
                        .HasColumnType("integer");

                    b.Property<DateOnly>("Vality")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.ToTable("Itens");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Fabrication = new DateOnly(2023, 8, 22),
                            IsPerishable = false,
                            Name = "ToothPaste",
                            Price = 2.5m,
                            Quantity = 2,
                            UnitOfMeasurement = 2,
                            Vality = new DateOnly(2023, 8, 22)
                        },
                        new
                        {
                            Id = 2,
                            Fabrication = new DateOnly(2023, 8, 21),
                            IsPerishable = false,
                            Name = "Shampoo",
                            Price = 4.5m,
                            Quantity = 8,
                            UnitOfMeasurement = 0,
                            Vality = new DateOnly(2023, 8, 29)
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
